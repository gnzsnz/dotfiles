#!/usr/bin/env bash
###############################################################################
# ~/.config/pythonrc
#
# gnzsnz dotfiles
#
# sensible python defaults
#
###############################################################################

## pyenv
export PYENV_ROOT="$HOME/.pyenv"
export PATH="$PYENV_ROOT/bin:$PATH"
#
if command -v pyenv >/dev/null ; then
   eval "$(pyenv init -)"
   #eval "$(pyenv init --path)"
   # pyenv bash completion
   if [ -f "$(pyenv root)"/completions/pyenv.bash ] ; then 
      source "$(pyenv root)"/completions/pyenv.bash
   elif [ -f /opt/homebrew/opt/pyenv/completions/pyenv.bash ]; then
      source /opt/homebrew/opt/pyenv/completions/pyenv.bash
   fi
   # pyenv virtualenv
   if which pyenv-virtualenv > /dev/null; then
      eval "$(pyenv virtualenv-init -)"
      export PYENV_VIRTUALENV_DISABLE_PROMPT=1
   fi

fi
## end pyenv

# PYTHONSTARTUP
[ -f "~/.config/ptpythonstartup.py" ] && \
export PYTHONSTARTUP="~/.config/ptpythonstartup.py"

# gpip
gpip(){
   PIP_REQUIRE_VIRTUALENV="" pip "$@"
}

gpip3(){
   PIP_REQUIRE_VIRTUALENV="" pip3 "$@"
}

alias pipup='pip freeze | grep -v '^\-e' |grep -v @| cut -d = -f 1 | xargs pip install -U'
alias pipup3='pip3 freeze | grep -v '^\-e' |grep -v @| cut -d = -f 1 | xargs pip3 install -U'

# homebrew python pip
# pip should only run if there is a virtualenv currently activated
if [[ -z "$PIP_REQUIRE_VIRTUALENV" ]]; then
   PIP_REQUIRE_VIRTUALENV=true
   export PIP_REQUIRE_VIRTUALENV
fi

# pip bash completion start
_pip_completion()
{
    COMPREPLY=( $( COMP_WORDS="${COMP_WORDS[*]}" \
                   COMP_CWORD=$COMP_CWORD \
                   PIP_AUTO_COMPLETE=1 $1 ) )
}
complete -o default -F _pip_completion pip
# pip bash completion end
